{
    "name": "@koromerzhin/labstag",
    "version": "1.4.0",
    "description": "Site Internet sous Symfony",
    "main": "index.js",
    "scripts": {
        "assets": "docker exec -i $($npm_package_config_phpfpm) symfony console assets:install public --symlink --relative",
        "bash:phpfpm": "docker exec -ti $($npm_package_config_phpfpm) bash",
        "bdd:mariadb": "korojscommands bddset-mariadb",
        "cmd:install:all": "npm-run-all -c exec doctrine:migrate assets encore:dev lint:all",
        "cmd:install:bdd": "npm-run-all -c doctrine:fixtures cmd:labstag:all",
        "cmd:install:dev": "npm-run-all -c download:phar cmd:install:all cmd:install:bdd",
        "cmd:install:prod": "npm-run-all -c cmd:install:all cmd:install:bdd encore:build",
        "cmd:labstag:all": "npm-run-all -c labstag:install labstag:guard-route labstag:workflows-show",
        "cmd:php-cs-fixer_phpcbf": "npm-run-all -c lint:php-cs-fixer lint:phpcbf",
        "cmd:validate_outdated": "npm-run-all -c composer:validate composer:outdated",
        "composer:fund": "docker exec -i $($npm_package_config_phpfpm) symfony composer fund",
        "composer:install": "docker exec -i $($npm_package_config_phpfpm) symfony composer install",
        "composer:install:dev": "docker exec -i $($npm_package_config_phpfpm) symfony composer install --no-progress --prefer-dist --optimize-autoloader",
        "composer:install:prod": "docker exec -i $($npm_package_config_phpfpm) symfony composer install --no-progress --prefer-dist --optimize-autoloader --no-dev",
        "composer:outdated": "docker exec -i $($npm_package_config_phpfpm) symfony composer outdated",
        "composer:suggests": "docker exec -i $($npm_package_config_phpfpm) symfony composer suggests --by-suggestion",
        "composer:update": "docker exec -i $($npm_package_config_phpfpm) symfony composer update",
        "composer:validate": "docker exec -i $($npm_package_config_phpfpm) symfony composer validate",
        "contributors:add": "all-contributors add",
        "contributors:check": "all-contributors check",
        "contributors:generate": "all-contributors generate",
        "docker:deploy": "korojscommands docker_deploy",
        "docker:getpull-image": "korojscommands docker_getpull-image",
        "docker:ls": "korojscommands docker_ls",
        "docker:waiting": "korojscommands docker_waiting --status running --container apache phpfpm",
        "doctrine:fixtures": "docker exec -i $($npm_package_config_phpfpm) symfony console doctrine:fixtures:load -n",
        "doctrine:migrate": "docker exec -i $($npm_package_config_phpfpm) symfony console doctrine:migrations:migrate -n",
        "doctrine:schema:update": "docker exec -i $($npm_package_config_phpfpm) symfony console doctrine:schema:update --force",
        "doctrine:validate": "docker exec -i $($npm_package_config_phpfpm) symfony console doctrine:schema:validate",
        "download:phar": "korojscommands php_download-phar",
        "encore:build": "encore production --progress",
        "encore:dev": "encore dev",
        "encore:dev:server": "encore dev-server",
        "encore:watch": "encore dev --watch",
        "eslint": "eslint assets/js/",
        "eslint:fix": "eslint assets/js/ --fix",
        "exec": "npm-run-all -c bdd:mariadb docker:getpull-image docker:deploy docker:waiting docker:ls",
        "jscpd": "jscpd assets apps/src",
        "jscpd:report": "jscpd assets apps/src -r html -s",
        "labstag:geocode:install": "docker exec -i $($npm_package_config_phpfpm) symfony console labstag:geocode:install",
        "labstag:guard-route": "docker exec -i $($npm_package_config_phpfpm) symfony console labstag:guard-route",
        "labstag:install": "docker exec -i $($npm_package_config_phpfpm) symfony console labstag:install",
        "labstag:workflows-show": "docker exec -i $($npm_package_config_phpfpm) symfony console labstag:workflows-show",
        "lint:all": "npm-run-all -c cmd:validate_outdated cmd:php-cs-fixer_phpcbf eslint:fix lint:stylelint:fix lint:twig lint:container lint:yaml lint:phpaudit lint:markdown rector",
        "lint:container": "docker exec -i $($npm_package_config_phpfpm) symfony console lint:container",
        "lint:markdown": "markdownlint README.md",
        "lint:php-cs-fixer": "docker exec -i $($npm_package_config_phpfpm) php -d memory_limit=-1 php-cs-fixer.phar fix src",
        "lint:php-cs-fixer:dry": "docker exec -i $($npm_package_config_phpfpm) php -d memory_limit=-1 php-cs-fixer.phar fix src --dry-run -v --diff",
        "lint:phpaudit": "npm-run-all -c lint:phpcs lint:phpmd lint:phpmnd lint:phpstan:0",
        "lint:phpcbf": "docker exec -i $($npm_package_config_phpfpm) php -d memory_limit=-1 phpcbf.phar -d memory_limit=-1 --report=diff -p --extensions=php --standard=phpcs.xml",
        "lint:phpcs": "docker exec -i $($npm_package_config_phpfpm) php -d memory_limit=-1 phpcs.phar --report=full --extensions=php src --standard=phpcs.xml",
        "lint:phpcs:error": "docker exec -i $($npm_package_config_phpfpm) php -d memory_limit=-1 phpcs.phar  --report=full --extensions=php --warning-severity=0 --standard=phpcs.xml",
        "lint:phpcs:warning": "docker exec -i $($npm_package_config_phpfpm) php -d memory_limit=-1 phpcs.phar --report=full --extensions=php --error-severity=0 --standard=phpcs.xml",
        "lint:phpdoc": "docker exec -i $($npm_package_config_phpfpm) php -d memory_limit=-1 phpDocumentor.phar -d src -t public/docs",
        "lint:phploc": "docker exec -i $($npm_package_config_phpfpm) php -d memory_limit=-1 phploc.phar src",
        "lint:phpmd": "docker exec -i $($npm_package_config_phpfpm) php -d memory_limit=-1 -d error_reporting=24575 phpmd.phar src,features/bootstrap ansi phpmd.xml",
        "lint:phpmnd": "docker exec -i $($npm_package_config_phpfpm) symfony composer run phpmnd",
        "lint:phpstan:0": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_phpstan -l 0",
        "lint:phpstan:1": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_phpstan -l 1",
        "lint:phpstan:2": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_phpstan -l 2",
        "lint:phpstan:3": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_phpstan -l 3",
        "lint:phpstan:4": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_phpstan -l 4",
        "lint:phpstan:5": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_phpstan -l 5",
        "lint:phpstan:6": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_phpstan -l 6",
        "lint:phpstan:7": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_phpstan -l 7",
        "lint:phpstan:8": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_phpstan -l 8",
        "lint:phpstan:9": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_phpstan -l 9",
        "lint:stylelint": "stylelint assets/scss/*.scss",
        "lint:stylelint:fix": "stylelint assets/scss/*.scss --fix",
        "lint:twig": "docker exec -i $($npm_package_config_phpfpm) symfony console lint:twig templates",
        "lint:yaml": "docker exec -i $($npm_package_config_phpfpm) symfony console lint:yaml config translations --parse-tags",
        "messenger:consume": "docker exec -i $($npm_package_config_phpfpm) symfony console messenger:consume async -vv",
        "rector": "docker exec -i $($npm_package_config_phpfpm) symfony composer run rector",
        "rector:dry": "docker exec -i $($npm_package_config_phpfpm) symfony composer run rector-dry",
        "test:behat": "docker exec -i $($npm_package_config_phpfpm) php -d memory_limit=-1 behat.phar --config behat.yaml",
        "test:phpunit": "docker exec -i $($npm_package_config_phpfpm) symfony composer run simple-phpunit",
        "test:phpunit:unit-integration": "docker exec -i $($npm_package_config_phpfpm) symfony composer run simple-phpunit-unit-integration",
        "translation": "npm-run-all -c  translation:fr translation:en",
        "translation:fr": "docker exec -i $($npm_package_config_phpfpm) symfony console translation:extract --force --format=yaml fr",
        "translation:en": "docker exec -i $($npm_package_config_phpfpm) symfony console translation:extract --force --format=yaml en",
        "workflow:dump:all": "npm-run-all -c workflow:dump:attachment workflow:dump:bookmark workflow:dump:chapter workflow:dump:edito workflow:dump:email workflow:dump:history workflow:dump:memo workflow:dump:phone workflow:dump:post workflow:dump:user",
        "workflow:dump:attachment": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump attachment | dot -Tpng -o workflows.png",
        "workflow:dump:bookmark": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump bookmark | dot -Tpng -o bookmark.png",
        "workflow:dump:chapter": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump chapter | dot -Tpng -o chapter.png",
        "workflow:dump:edito": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump edito | dot -Tpng -o edito.png",
        "workflow:dump:email": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump email | dot -Tpng -o email.png",
        "workflow:dump:history": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump history | dot -Tpng -o history.png",
        "workflow:dump:memo": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump memo | dot -Tpng -o memo.png",
        "workflow:dump:phone": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump phone | dot -Tpng -o phone.png",
        "workflow:dump:post": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump post | dot -Tpng -o post.png",
        "workflow:dump:user": "docker exec -i $($npm_package_config_phpfpm) $npm_package_config_wdump user | dot -Tpng -o user.png"
    },
    "config": {
        "phpstan": "bin/phpstan analyse",
        "wdump": "symfony console workflow:dump",
        "phpfpm": "npx korojscommands docker_getname-container --container phpfpm"
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/koromerzhin/labstag.git"
    },
    "keywords": [],
    "author": "",
    "license": "ISC",
    "bugs": {
        "url": "https://github.com/koromerzhin/labstag/issues"
    },
    "homepage": "https://github.com/koromerzhin/labstag#readme",
    "devDependencies": {
        "@symfony/stimulus-bridge": "2.0.*",
        "@symfony/webpack-encore": "1.6.*",
        "core-js": "3.21.*",
        "eslint": "7.12.*",
        "eslint-config-standard": "16.0.*",
        "eslint-plugin-import": "2.25.*",
        "eslint-plugin-node": "11.1.*",
        "eslint-plugin-promise": "4.3.*",
        "file-loader": "6.2.*",
        "postcss-loader": "7.0.*",
        "regenerator-runtime": "0.13.*",
        "sass": "1.49.*",
        "sass-loader": "12.4.*",
        "stimulus": "2.0.*",
        "stylelint": "13.13.*",
        "stylelint-config-standard": "22.0.*",
        "url-loader": "4.1.*",
        "webpack-notifier": "1.15.*"
    },
    "engines": {
      "node": ">=18"
    },
    "dependencies": {
        "@fortawesome/fontawesome-free": "6.4.*",
        "@popperjs/core": "2.11.*",
        "bootstrap": "5.2.*",
        "ckeditor4": "4.24.*",
        "flag-icon-css": "4.1.*",
        "jquery": "3.6.*",
        "korojscommands": "1.2.*",
        "sortablejs": "1.15.*",
        "tarteaucitronjs": "1.11.*",
        "tom-select": "2.2.*"
    }
}