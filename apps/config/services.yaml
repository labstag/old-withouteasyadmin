# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  file_directory: '%kernel.project_dir%/public/uploads'
  metatags: ['disclaimer', 'meta', 'tarteaucitron', 'format_datetime']

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  Labstag\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
  Labstag\Paragraph\:
      resource: "../src/Paragraph/"
      public: true
      tags: [paragraphsclass]
  Labstag\Entity\:
      resource: "../src/Entity/"
      public: true
      tags: [entitiesclass]
  Labstag\Service\Gestion\Entity\:
      resource: "../src/Service/Gestion/Entity/"
      public: true
      tags: [entitiesadminservice]
  Labstag\Block\:
      resource: "../src/Block/"
      public: true
      tags: [blocksclass]
  Labstag\Front\:
      resource: "../src/Front/"
      public: true
      tags: [frontclass]
  Labstag\Form\Front\:
      resource: "../src/Form/Front/"
      public: true
      tags: [frontform]
  Labstag\Form\Security\:
      resource: "../src/Form/Security/"
      public: true
      tags: [securityform]
  Labstag\PostForm\:
    resource: "../src/PostForm/"
    public: true
    tags: [postform]
  Labstag\Domain\:
    resource: "../src/Domain/"
    public: true
    tags: [domainsclass]

# controllers are imported separately to make sure services can be injected
# as action arguments even if you don't extend any base controller class
  Labstag\Repository\:
    resource: "../src/Repository/"
    public: true
    tags: [repositories]
  Labstag\Controller\:
    resource: "../src/Controller/"
    tags: ["controller.service_arguments"]
  Labstag\OpenApi\ActionsOpenApi:
    decorates: api_platform.openapi.factory
  Labstag\OpenApi\AttachmentOpenApi:
    decorates: api_platform.openapi.factory
  Labstag\OpenApi\CheckOpenApi:
    decorates: api_platform.openapi.factory
  Labstag\OpenApi\GuardOpenApi:
    decorates: api_platform.openapi.factory
  Labstag\OpenApi\SearchOpenApi:
    decorates: api_platform.openapi.factory

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
