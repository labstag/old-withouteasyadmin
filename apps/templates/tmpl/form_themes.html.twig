{% use "bootstrap_5_layout.html.twig" %}
{% block choice_widget_collapsed %}
    {% set isInput = attr.is|default('select-selector') %}
    {% set attr = attr|merge({'is': isInput}) %}
    {%  if required and placeholder is none and not placeholder_in_choices and not multiple and (attr.size is not defined or attr.size <= 1) %}
        {% set required = false %}
    {%  endif %}
    <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
        {%  if placeholder is not none %}
            <option value=""{% if required and value is empty %} selected="selected"{% endif %}>{{ placeholder != '' ? (translation_domain is same as(false) ? placeholder : placeholder|trans({}, translation_domain)) }}</option>
        {%  endif %}
        {%  if preferred_choices|length > 0 %}
            {% set options = preferred_choices %}
            {% set render_preferred_choices = true %}
            {{- block('choice_widget_options') -}}
            {%  if choices|length > 0 and separator is not none %}
                <option disabled="disabled">{{ separator }}</option>
            {%  endif %}
        {%  endif %}
        {%  set options = choices %}
        {%  set render_preferred_choices = false %}
        {{- block('choice_widget_options') -}}
    </select>
{% endblock %}

{% block upload_row %}
    <fieldset>
        <legend>{{ form.vars.label }}</legend>
        <div>
        {{ form_widget(form) }}
        {{ form_errors(form) }}
        {{ form_help(form) }}
        {% if field is defined and field is not null and field.id is not null %}
            {% set file = attachment(field) %}
            {% set state = url|guard_route %}
            {% if state == false %}
                {% set url = '#' %}
            {% endif %}
            {% if file is not null and file.name is not null %}
                {% embed "embed/attachment/img.html.twig" with {
                    src: asset(file.name)|imagefilter('my_thumb'),
                    url: url,
                    token: csrf_token('attachment-img-' ~ file.id)
                } %}{% endembed %}
            {% endif %}
        {% endif %}
    </fieldset>
{% endblock %}

{% block paragraph_row %}
    <fieldset{% if urlAdd is defined %} data-url="{{ urlAdd }}"{% endif %}>
        <legend>{{ form.vars.label }}</legend>
        <div id="paragraph-list">
            {% set param = {'urledit': urlEdit, 'urldelete': urlDelete, 'paragraphs': paragraphs} %}
            {% if urlAdd is defined %}
                {% set param = {'addurl': urlAdd, 'urledit': urlEdit, 'urldelete': urlDelete, 'paragraphs': paragraphs} %}
            {% endif %}
            {% include "gestion/paragraph/list.html.twig" with param %}
        </div>
        {{ form_widget(form) }}
        {{ form_errors(form) }}
        {{ form_help(form) }}
    </fieldset>
{% endblock %}

{% block form_rows %}
    {% set template = form|form_class('back') %}
    {{ form|debug_begin_form('back') }}
    {% include template with {
        'row': form|filter(child => not child.rendered),
        'allow_delete': false
    } %}
    {{ form|debug_end_form('back') }}
{% endblock %}

{% block fieldset_widget %}
    <fieldset {{ block('widget_container_attributes') }}>
        {% if legend is defined and legend is not empty %}
            <legend>{{ legend }}</legend>
		{% endif %}
        {{ form_widget(form) }}
    </fieldset>
{% endblock %}

{% block form_errors %}
    {% if errors|length > 0 %}
        <span class="{% if form is not rootform %}invalid-feedback{% else %}alert alert-danger{% endif %} d-block">
            {% for error in errors %}
                {# <span class="d-block"> #}
                    <span class="form-error">{{ 'form.icon.error'|trans }}</span> <span class="form-error-message">{{ error.message }}</span>
                {# </span> #}
            {% endfor %}
        </span>
    {% endif %}
{% endblock form_errors %}

{% block week_widget %}
    {% if widget == 'single_text' %}
        {{ block('form_widget_simple') }}
    {% else %}
        {% set vars = widget == 'text' ? { 'attr': { 'size': 1 }} : {} %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline row')|trim}) %}
        <div {{ block('widget_container_attributes') }}>
            <div class="col">
                {{ form_widget(form.year, vars) }}
            </div>
            <div class="col">
                -
            </div>
            <div class="col">
                {{ form_widget(form.week, vars) }}
            </div>
        </div>
    {% endif %}
{% endblock week_widget %}

{% block form_help %}
    {% if help is not empty %}
        {% if "color" in form.vars.block_prefixes or "range" in form.vars.block_prefixes %}
            <br />
        {% endif %}
    {% endif %}
    {{ parent() }}
{% endblock %}

{% block radio_widget %}
    {% if form.parent.vars.preferred_choices is defined %}
        {% set required = false %}
    {% endif %}
    {{ parent() }}
{% endblock radio_widget %}

{% block form_widget_simple %}
    {% set type = type|default('') %}
    {% if attr.inputmode is defined and attr.inputmode == 'url' %}
        {% set isInput = attr.is|default('input-url') %}
        {% set attr = attr|merge({'is': isInput}) %}
    {% elseif type == 'email' %}
        {% set isInput = attr.is|default('input-email') %}
        {% set attr = attr|merge({'is': isInput}) %}
    {% elseif type == 'tel' %}
        {% set isInput = attr.is|default('input-phone') %}
        {% set attr = attr|merge({'is': isInput}) %}
    {% endif %}
    {% if type == 'file' %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' custom-file-input')|trim}) %}
    {% elseif type != 'hidden' and type != 'range' and type != 'color' %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) %}
    {% endif %}
    {% if type == 'range' or type == 'color' %}
        {# Attribute "required" is not supported #}
        {% set required = false %}
    {% endif %}
    <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
{% endblock form_widget_simple %}

{% block time_widget %}
    {% if widget == 'single_text' %}
        {{ block('form_widget_simple') }}
    {% else %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline row')|trim}) %}
        {% if datetime is not defined or false == datetime %}
            <div {{ block('widget_container_attributes') }}>
        {% endif %}
        <div class="col">
            {{ form_widget(form.hour) }}
        </div>
        {% if with_minutes %}
            {% if form.hour is defined %}
                <div class="col">
                    :
                </div>
            {% endif %}
            <div class="col">
                {{ form_widget(form.minute) }}
            </div>
        {% endif %}
        {% if with_seconds %}
            {% if form.hour is defined or form.minute is defined %}
                <div class="col">
                    :
                </div>
            {% endif %}
            <div class="col">
                {{ form_widget(form.second) }}
            </div>
        {% endif %}
        {% if datetime is not defined or false == datetime %}
            </div>
        {% endif %}
    {% endif %}
{% endblock time_widget %}

{% block dateinterval_widget %}
    {% if widget != 'single_text' and not valid %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control is-invalid')|trim}) %}
        {% set valid = true %}
    {% endif %}
    {% if widget == 'single_text' %}
        {{ block('form_widget_simple') }}
    {% else %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline row')|trim}) %}
        <div {{ block('widget_container_attributes') }}>
            {% if with_years %}
            <div class="col">
                {{ form_widget(form.years) }}
            </div>
            {% endif %}
            {% if with_months %}
            <div class="col">
                {{ form_widget(form.months) }}
            </div>
            {% endif %}
            {% if with_weeks %}
            <div class="col">
                {{ form_widget(form.weeks) }}
            </div>
            {% endif %}
            {% if with_days %}
            <div class="col">
                {{ form_widget(form.days) }}
            </div>
            {% endif %}
            {% if with_hours %}
            <div class="col">
                {{ form_widget(form.hours) }}
            </div>
            {% endif %}
            {% if with_minutes %}
            <div class="col">
                {{ form_widget(form.minutes) }}
            </div>
            {% endif %}
            {% if with_seconds %}
            <div class="col">
                {{ form_widget(form.seconds) }}
            </div>
            {% endif %}
            {% if with_invert %}{{ form_widget(form.invert) }}{% endif %}
        </div>
    {% endif %}
{% endblock dateinterval_widget %}

{% block date_widget %}
    {% if widget == 'single_text' %}
        {{ block('form_widget_simple') }}
    {% else %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline row')|trim}) %}
        {% if datetime is not defined or not datetime %}
            <div {{ block('widget_container_attributes') }}>
        {% endif %}
        {{ date_pattern|replace({
            '{{ year }}': '<div class="col">{{ year }}</div>',
            '{{ month }}': '<div class="col">{{ month }}</div>',
            '{{ day }}': '<div class="col">{{ day }}</div>',
        })|replace({
            '{{ year }}': form_widget(form.year),
            '{{ month }}': form_widget(form.month),
            '{{ day }}': form_widget(form.day),
        })|raw }}
        {% if datetime is not defined or not datetime %}
            </div>
        {% endif %}
    {% endif %}
{% endblock date_widget %}

{% block datetime_widget %}
    {% if widget == 'single_text' %}
        {{ block('form_widget_simple') }}
    {% else %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline row')|trim}) %}
        <div {{ block('widget_container_attributes') }}>
            <div class="col">
                {{ form_label(form.date) }}
            </div>
            {% if form.children.date.vars.widget == 'single_text' %}
                <div class="col">
            {% endif %}
                {{ form_widget(form.date, { datetime: true } ) }}
            {% if form.children.date.vars.widget == 'single_text' %}
                </div>
            {% endif %}
            <div class="col">
                {{ form_label(form.time) }}
            </div>
            {% if form.children.time.vars.widget == 'single_text' %}
                <div class="col">
            {% endif %}
            {{ form_widget(form.time, { datetime: true } ) }}
            {% if form.children.time.vars.widget == 'single_text' %}
                </div>
            {% endif %}
        </div>
    {% endif %}
{% endblock datetime_widget %}

{% block checkbox_radio_label %}
    {#- Do not display the label if widget is not defined in order to prevent double label rendering -#}
    {% if widget is defined %}
        {% set is_parent_custom = parent_label_class is defined and ('checkbox-custom' in parent_label_class or 'radio-custom' in parent_label_class or 'switch-custom' in parent_label_class) %}
        {% set is_custom = label_attr.class is defined and ('checkbox-custom' in label_attr.class or 'radio-custom' in label_attr.class or 'switch-custom' in label_attr.class) %}
        {% if is_parent_custom or is_custom %}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' custom-control-label')|trim}) %}
        {% else %}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' form-check-label')|trim}) %}
        {% endif %}
        {% if not compound %}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {% endif %}
        {# {% if required %}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %} #}
        {% if parent_label_class is defined %}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ parent_label_class)|replace({'checkbox-inline': '', 'radio-inline': '', 'checkbox-custom': '', 'radio-custom': ''})|trim}) %}
        {% endif %}
        {% if label is not same as(false) and label is empty %}
            {% if label_format is not empty %}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {% else %}
                {% set label = name|humanize %}
            {% endif %}
        {% endif %}

        {{ widget|raw }}
        <label{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}>
            {% if label is not same as(false) %}
                {% if translation_domain is same as(false) %}
                    {% if label_html is same as(false) %}
                        {{ label }}
                    {% else %}
                        {{ label|raw }}
                    {% endif %}
                {% else %}
                    {% if label_html is same as(false) %}
                        {{ label }}
                    {% else %}
                        {{ label|raw }}
                    {% endif %}
                {% endif %}
            {% endif %}
        </label>
    {% endif %}
{% endblock checkbox_radio_label %}

{% block form_row %}
	{% set label_attr = {} %}
	{% set element_attr =  attr|merge({
		'class': 'form-group'
	}) %}
    {% if form.children.date is defined and form.children.time is defined %}
        {% set element = 'div' %}
    {% elseif compound is defined and form.children.hour is defined %}
        {% set element = 'div' %}
    {% elseif compound is defined and form.children.year is defined %}
        {% set element = 'div' %}
    {% elseif compound is defined and form.children.years is defined %}
        {% set element = 'div' %}
    {% elseif expanded is defined and expanded %}
        {% set element = 'div' %}
    {% elseif compound is defined and compound %}
        {% set element = 'fieldset' %}
        {% if prototype is defined %}
            {% set element_attr = element_attr|merge({
                'class': 'form-group fieldcollection'
            }) %}
        {% endif %}
        {% if "collection" in form.vars.block_prefixes %}
            {% if prototype is defined and allow_add %}
                {% set label_attr = label_attr|merge({
                    'allow_add': true
                }) %}
                {% set element_attr = element_attr|merge({
                    'data-prototype': block('collection_item_widget')|prototype
                }) %}
            {% endif %}
        {% endif %}
        {% if prototype is not defined %}
            {% set element = 'div' %}
        {% endif %}
    {% endif %}
    {% set widget_attr = {} %}
    {% if help is not empty %}
        {% set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} %}
    {% endif %}
    <{{ element|default('div') }}{% if element_attr %}{% with { attr: element_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
        {{ form_label(form) }}
        {{ form_widget(form, widget_attr) }}
        {{ form_errors(form) }}
        {{ form_help(form) }}
    </{{ element|default('div') }}>
{% endblock %}

{% block form_end %}
        {% if not render_rest is defined or render_rest %}
            {{ form_rest(form) }}
        {% endif %}
        {% set required = false %}
        {% for children in form.children %}
            {% if children.vars.required is defined and children.vars.required == true %}
                {% set required = true %}
            {% endif %}
        {% endfor %}
        {% if required == true %}
            <div class="require-forminfo">{{ 'form.requireinfo'|trans({"%span%": "<span>*</span>"})|raw }}</div>
        {% endif %}
    </form>
{% endblock form_end %}

{% block form_label %}
    {% if label is not same as(false) %}
        {% if form.children.date is defined %}
            {% set element = 'label' %}
        {% elseif form.children.day is defined or form.children.month is defined or form.children.year is defined %}
            {% set element = 'label' %}
        {% elseif form.children.hour is defined or form.children.minute is defined or form.children.second is defined %}
            {% set element = 'label' %}
        {% elseif form.children.years is defined or form.children.months is defined or form.children.days is defined or form.children.hours is defined or form.children.minutes is defined or form.children.seconds is defined %}
            {% set element = 'label' %}
        {% elseif expanded is defined and expanded %}
            {% set element = 'label' %}
        {% elseif compound is defined and compound and prototype is defined %}
            {% set element = 'legend' %}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-form-label')|trim}) %}
        {% else %}
            {% set label_attr = label_attr|merge({for: id}) %}
        {% endif %}
        {% if required and "color" not in form.vars.block_prefixes and "range" not in form.vars.block_prefixes %}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}
        {% if label is empty %}
            {% if label_format is not empty %}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {% else %}
                {% set label = name|humanize %}
            {% endif %}
        {% endif %}
		<{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
			{{ label }}
            <div class="btn-group float-end" role="group">
                {% if allow_add is defined and allow_add == true %}
                    {% embed "embed/btn/addcollection.html.twig" %}{% endembed %}
                {% endif %}
                {% if element|default('label') == 'legend' and "collection" in form.vars.block_prefixes and "minmax" in row_attr %}
                    {% embed "embed/btn/togglefieldset.html.twig" %}{% endembed %}
                {% endif %}
            </div>
		</{{ element|default('label') }}>
    {% endif %}
{% endblock %}


{% block collection_item_widget %}
	<div class="collection-row">
        {% set template = prototype.vars.block_prefixes|form_prototype('back') %}
        {% include template with {
            'allow_delete': allow_delete,
            'prototype': prototype
        } %}
	</div>
{% endblock %}

{% block collection_widget %}
    <div class="field-row">
        {% for row in form %}
            {% set template = row|form_class('back') %}
            {% if prototype is defined %}
                <div class="collection-row">
            {% endif %}
            {{ row|debug_begin_form('back') }}
            {% include template with {'row': row, 'allow_delete': allow_delete} %}
            {{ row|debug_end_form('back') }}
            {% if prototype is defined %}
                </div>
            {% endif %}
        {% endfor %}
    </div>
{% endblock %}

{%  block button_widget %}
    {%  set attr = attr|merge({class: (attr.class|default('btn-secondary') ~ ' btn')|trim}) %}
    <div{% with {attr: row_attr|merge({class: (row_attr.class|default('') ~ ' form-group')|trim})} %}{{ block('attributes') }}{% endwith %}>
        
    {%  if label is empty %}
        {%  if label_format is not empty %}
            {% set label = label_format|replace({
                '%name%': name,
                '%id%': id,
            }) %}
        {%  elseif label is not same as(false) %}
            {% set label = name|humanize %}
        {%  endif %}
    {%  endif %}
    <button type="{{ type|default('button') }}" {{ block('button_attributes') }}>
        {%  if translation_domain is same as(false) %}
            {%  if label_html is same as(false) %}
                {{- label -}}
            {%  else %}
                {{- label|raw -}}
            {%  endif %}
        {%  else %}
            {%  if label_html is same as(false) %}
                {{- label -}}
            {%  else %}
                {{- label|raw -}}
            {%  endif %}
        {%  endif %}
    </button>
    </div>
{%  endblock button_widget %}

{% block form_start %}
    {% do form.setMethodRendered() %}
    {% set method = method|upper %}
    {% if method in ["GET", "POST"] %}
        {% set form_method = method %}
    {% else %}
        {% set form_method = "POST" %}
    {% endif %}
    <form{% if name != '' %} name="{{ name|e('html_attr') }}"{% endif %} method="{{ form_method|lower }}"{% if action != '' %} action="{{ action }}"{% endif %}{{ block('attributes') }}{% if multipart %} enctype="multipart/form-data"{% endif %}>
    {% if form_method != method %}
        <input type="hidden" name="_method" value="{{ method }}" />
    {% endif %}
    {{ form_errors(form) }}
{% endblock form_start %}
